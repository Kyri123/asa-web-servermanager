name: build

on:
    push:
        branches:
            - '*'
            - '!master'

jobs:
    test-prepare:
        runs-on: windows-latest
        env:
            DATABASE_HOST: 'localhost'
            DATABASE_USER: 'root'
            DATABASE_PASSWORD: ''
            DATABASE_DB: 'asa_web_servermanager'
            JWT_SECRET_KEY: 'workflowwithascretkey'
        steps:
            - uses: actions/checkout@v2
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'
            - uses: pnpm/action-setup@v2
              name: Install pnpm
              with:
                  version: 8
                  run_install: false
            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
            - name: prepare steam cmd
              run: .\prepare.ps1

    install:
        runs-on: ubuntu-latest
        env:
            DATABASE_HOST: 'localhost'
            DATABASE_USER: 'root'
            DATABASE_PASSWORD: ''
            DATABASE_DB: 'asa_web_servermanager'
            JWT_SECRET_KEY: 'workflowwithascretkey'
        steps:
            - uses: actions/checkout@v3
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'
            - uses: pnpm/action-setup@v2
              name: Install pnpm
              with:
                  version: 8
                  run_install: false
            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-
            - name: install dependencies
              run: pnpm i
            - name: lint next app
              run: pnpm lint
            - name: build next app
              run: pnpm build
